// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             String   @id @default(uuid())
  email          String   @unique
  password       String?
  name           String?
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
  lastIngestedAt DateTime? // Track last content ingestion

  // OAuth tokens
  mailchimpToken    MailchimpToken?
  intercomToken     IntercomToken?
  
  // Campaign history
  campaigns Campaign[]
}

model MailchimpToken {
  id           String   @id @default(cuid())
  userId       String   @unique
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  accessToken  String
  refreshToken String?
  expiresAt    DateTime?
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
}

model IntercomToken {
  id           String   @id @default(cuid())
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId       String   @unique
  accessToken  String
  refreshToken String?
  expiresAt    DateTime?
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
}

model Campaign {
  id        String   @id @default(cuid())
  userId    String
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  prompt    String
  result    String   // JSON string of the generated campaign
  createdAt DateTime @default(now())
} 

model MailchimpContent {
  id         String   @id @default(uuid())
  userId     String
  campaignId String
  subject    String
  body       String
  sentAt     DateTime
  embedding  Bytes
}

model IntercomContent {
  id         String   @id @default(uuid())
  userId     String
  contentId  String
  title      String
  body       String
  sentAt     DateTime
  embedding  Bytes
} 